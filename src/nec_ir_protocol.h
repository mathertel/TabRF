// nec_ir_protocol.h

// https://www.sbprojects.net/knowledge/ir/nec.php
// https://techdocs.altium.com/display/FPGA/NEC+Infrared+Transmission+Protocol


// typical recording: [nec N00000000 11110111 11010000 00101111]
// 9193,4530, 
// 632,520,595,556,605,519,631,522,592,560,600,523,630,520,593,556,
// 602,1670,593,1675,633,1665,604,1666,595,555,570,1700,593,1674,597,1699,
// 569,1700,592,1675,598,554,591,1674,598,553,592,558,569,553,596,554,
// 591,560,567,555,596,1696,568,555,596,1696,567,1699,591,1674,598,1696,

// repeat code:
// 9183,2258,592,

// 558,591,1681,598,556,593,562,566,560,595,555,593,562,568,556,597,1703,571,556,596,1704,570,1705,595,1679,598,1703,570,15529,81,65070,9193,
// 4530,632,520,595,556,605,519,631,522,592,560,600,523,630,520,593,556,602,1670,593,1675,633,1665,604,1666,595,555,570,1700,593,1674,597,
// 1699,569,1700,592,1675,598,554,591,1674,598,553,592,558,569,553,596,554,591,560,567,555,596,1696,568,555,596,1696,567,1699,591,1674,598,
// 1696,569,41398,9183,2258,592,52659,142,37089,139,60928,85,24742,9175,4559,570,557,597,554,595,558,569,556,596,556,594,557,571,555,597,556,593,
// 1678,597,1703,571,1701,594,1678,598,554,594,1677,631,1668,567,1704,595,1676,633,1666,605,519,630,1668,605,518,631,520,592,559,603,520,630,
// 522,593,557,604,1666,593,559,602,1667,594,1675,631,1668,604,1667,590,41502,9157,2260,598,37695,90,62909,9171,4558,571,556,596,554,593,558,570,
// 556,597,554,593,559,568,556,597,555,594,1677,599,1700,570,1702,594,1676,597,557,591,1679,596,1701,570,1701,591,1679,597,1701,570,554,596,
// 1701,570,554,596,556,591,559,567,556,595,555,592,560,566,1702,590,563,567,1700,592,1678,597,1699,570,1701,591,41501,9155,2263,598,25530,9171,
// 4564,603,522,630,525,591,558,604,521,628,528,592,557,570,556,597,554,595,1678,631,1670,604,1669,594,1677,632,522,586,1685,632,1668,605,
// 1668,595,1676,631,1670,603,520,632,1670,601,522,631,521,593,558,602,524,628,522,595,556,604,1668,593,559,604,1668,594,1678,630,1669,604,


#ifndef SIGNAL_PARSER_NEC_IR_H_
#define SIGNAL_PARSER_NEC_IR_H_

#include "signal_parser.h"


/** register the "older" intertechno protocol */
void register_nec_ir(SignalParser &sig) {
  // this protocol has a fixed length of 12 codes
  uint8_t prot = sig.newProtocol("nec", 1, 1 + 32, 20);

  uint32_t t = 560; 

  // starting sequence is /‾\___(long)_______/
  sig.newCode(prot, 'N', SP_START, 9000, 4500);

  // low signal is /‾\_/
  sig.newCode(prot, '0', SP_DATA, t, t);

  // high signal is /‾\___/
  sig.newCode(prot, '1', SP_DATA, t, 3 * t);

  // Repeat signal is /‾\___/
  sig.newCode(prot, 'R', SP_START | SP_END, 9000, 2250, t);



  // this protocol has a fixed length of 12 codes
  prot = sig.newProtocol("necR", 1, 1, 20);

  t = 560;

  // Repeat signal is /‾\___/
  sig.newCode(prot, 'X', SP_START | SP_END, 9000, 2250, t);

}  // register_nec_ir()

#endif  // SIGNAL_PARSER_NEC_IR_H_

// End.
